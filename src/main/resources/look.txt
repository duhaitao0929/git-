1、在实际开发中，多表操作都是查询（99.9%）
2、增删改都是单表操作（学习阶段，有时候，级联操作，不建议）
3、网站的注册，一般只需要  用户名 密码  手机号就OK啦（等你注册了，要使用某些功能的时候，再补充信息）
    用户体验好，10秒贷款等骗人网站（一天都不一定下来，当然去不正规的网址贷款）


 4、多对一，关联关系在多的一方，多的一方操作，是自己操作自己的表，方便
        在一的一方操作，关联关系，在多的一方，需要去操作多的一方，而且是操作多个（循环操作）
        点击按钮：
        1、带着部门deptid，去后台，先把这个这个部门的信息全部查询出来。
        还要把所有的角色列表查询出来，还要把这个部门目前有那些角色也要查询出来（只需要角色id就OK啦）
        要这个部门原来的所有角色的id用来在前台回显

       3、 给页面
            把部门id保存起来，
            把所有的角色列表展示出来
            把原来的角色全部回显（复选框）（双重for循环回显）
            提交

            复选框回显：直接双重for循环，会导致，笛卡尔迪，有10个角色，部门原来有3个的话，就会展示出30条记录
            要是在后台，我们在双重for循环里面加入  break就OK啦，前台的jstl里面没有这个语法，里面没有





         2、到后台来保存     deptid、rids（用户重新选择的角色的全部id），原来的角色id就不要了

         传递service里面
            假如部门  原来是  12345    345678

             数据库数据在   t_role里面，Dept的对象

             先删除（其实是修改）  update t_role set deptid = null where deptid = #{deptid}
             后新增（其实是修改）  接收到了    rids   for循环 拿出   rid   deptid
                                   update t_role set deptid = #{deptid} where rid=#{rid}
        4、当我们把这个部门的角色删掉之后，部门下面没有角色了，但是，部门里面原来的用户已经选择了这个角色
            而且这个数据字用户表里面（在实际生产中，不可能碰到，因为在实际中，部门不删掉，部门的角色不删除，
            只是新增，就算这个角色不用了，也不能删掉，因为老的数据里面引用了这个角色），想处理的话，
            在删除部门部门角色的时候，把用户表里面，已经已经选择了这个部门的角色全部清空（不用处理）

周六作业：
    用户表的增删改查（特殊类型，日期，前后台需要格式化和比较）
       按照用户模糊，按照生日范围查询


       日期：前台格式化（jstl标签，fmt标签）
       后台：springMVC的日期的处理
       文件上传：用户头像。
       excel导出（导入几乎用户不上，也可以做一下）



Ztree：jquery的插件
    setting：样式等设置
    数据从后台获取的
    点击树的回调函数（点击函数）
    初始化点击
    把树挂到指定位置 （在页面加载完之后）
    $.fn.zTree.init($("#treeClass"),setting,zNodes);
        三个参数：1、位置、2、样式、3、数据啊，把那些数据展示到树上面